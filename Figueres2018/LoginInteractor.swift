    //
//  LoginInteractor.swift
//  Figueres2018
//
//  Created by Javier Jara on 12/6/16.
//  Copyright (c) 2016 Data Center Consultores. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol LoginInteractorInput {
    func fetchUser(request: Login.FetchUser.Request)
    var person:PersonModel? {get}
    
}

protocol LoginInteractorOutput {
    func presentPerson(_ response: Login.FetchUser.Response)
    func presentError(_ error: PersonStoreError)
}

class LoginInteractor: LoginInteractorInput {
    
    var output: LoginInteractorOutput!
    var worker = LoginWorker(loginStore:PersonCoreDataSore())
    var person:PersonModel?

    
    // MARK: - Business logic
    
    func fetchUser(request: Login.FetchUser.Request) {
        
        worker.fetchUser(request.id) { (result) in
            switch result {
            case .success(let person) :
                let response = Login.FetchUser.Response(user:person)
                UserDefaults.standard.set(person.nombre, forKey: "currentPerson")
                self.person = person
                self.output.presentPerson(response)
            case .failure(let error):
                self.output.presentError(error)
            }
        }
    }
}
